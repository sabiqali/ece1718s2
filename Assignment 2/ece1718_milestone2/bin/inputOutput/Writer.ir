<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="inputOutput.Writer" fileName="/ece1718_milestone2/src/inputOutput/Writer.cal"
    lineNumber="40">
  <actions>
    <body lineNumber="80" name="getEOF">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target"
          lineNumber="80" name="p" uses="#//@actions.0/@body/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.2/@target"
          name="local_DEBUG" uses="#//@actions.0/@body/@blocks.1/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@thenBlocks.0/@instructions.1/@target #//@actions.0/@body/@blocks.2/@instructions.0/@target"
          name="local_peof" uses="#//@actions.0/@body/@blocks.1/@thenBlocks.1/@condition/@use #//@actions.0/@body/@blocks.3/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="80">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.0/@inputPattern/@variables.0"/>
          <target variable="#//@actions.0/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="84">
          <target variable="#//@stateVars.1"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.0"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.0/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="86">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.0/@body/@locals.1"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="88" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="Writer ACTION: getEOF"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad">
            <source variable="#//@stateVars.1"/>
            <target variable="#//@actions.0/@body/@locals.2"/>
          </instructions>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="90">
          <condition xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.2"/>
          </condition>
          <joinBlock/>
          <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="91" procedure="#//@procs.3">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprString" value="Writer: File is close"/>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
              </arguments>
            </instructions>
          </thenBlocks>
        </thenBlocks>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="93" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="Writer STATE: ReadEOF"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="94" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="-------------------------"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.0/@body/@locals.2"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="98">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.0/@body/@locals.2"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="99" procedure="#//@procs.2"/>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.1">
      <numTokensMap key="#//@inputs.1" value="1"/>
      <portToVarMap key="#//@inputs.1" value="#//@actions.0/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="80" name="pEOF" uses="#//@actions.0/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.0/@inputPattern/@variables.0" value="#//@inputs.1"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="80" name="isSchedulable_getEOF">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>getEOF</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="105" name="writeData">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.0/@target"
          lineNumber="105" name="b" uses="#//@actions.1/@body/@blocks.0/@instructions.1/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.2/@target"
          name="local_DEBUG" uses="#//@actions.1/@body/@blocks.1/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="105">
          <indexes xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </indexes>
          <source variable="#//@actions.1/@inputPattern/@variables.0"/>
          <target variable="#//@actions.1/@body/@locals.0"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="109" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </value>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@actions.1/@body/@locals.1"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="111">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@actions.1/@body/@locals.1"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="113" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="Writer ACTION: writeData"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="114" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="Writer STATE: WriteFile"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="115" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="-------------------------"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern ports="#//@inputs.0">
      <numTokensMap key="#//@inputs.0" value="1"/>
      <portToVarMap key="#//@inputs.0" value="#//@actions.1/@inputPattern/@variables.0"/>
      <variables assignable="true" lineNumber="105" name="Byte" uses="#//@actions.1/@body/@blocks.0/@instructions.0/@source">
        <type xsi:type="net.sf.orcc.ir:TypeList">
          <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="1">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </sizeExpr>
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
        </type>
      </variables>
      <varToPortMap key="#//@actions.1/@inputPattern/@variables.0" value="#//@inputs.0"/>
    </inputPattern>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="105" name="isSchedulable_writeData">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_peof" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@value/@expr/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.1"/>
          <target variable="#//@actions.1/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprUnary" op="LOGIC_NOT">
            <expr xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@scheduler/@locals.1"/>
            </expr>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>writeData</identifiers>
    </tag>
  </actions>
  <fsm initialState="#//@fsm/@vertices.1">
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.1" target="#//@fsm/@vertices.0"
        actions="#//@actions.0"/>
    <edges xsi:type="net.sf.orcc.df:Transition" source="#//@fsm/@vertices.0" target="#//@fsm/@vertices.1"
        actions="#//@actions.1"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="ReadEOF" incoming="#//@fsm/@edges.0"
        outgoing="#//@fsm/@edges.1"/>
    <vertices xsi:type="net.sf.orcc.df:State" label="WriteFile" incoming="#//@fsm/@edges.1"
        outgoing="#//@fsm/@edges.0"/>
  </fsm>
  <initializes>
    <body lineNumber="64" name="untagged_0">
      <locals assignable="true" defs="#//@initializes.0/@body/@blocks.0/@instructions.1/@target"
          name="local_DEBUG" uses="#//@initializes.0/@body/@blocks.1/@condition/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="66" procedure="#//@procs.0"/>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.0"/>
          <target variable="#//@initializes.0/@body/@locals.0"/>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockIf" lineNumber="68">
        <condition xsi:type="net.sf.orcc.ir:ExprVar">
          <use variable="#//@initializes.0/@body/@locals.0"/>
        </condition>
        <joinBlock/>
        <thenBlocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="70" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="Writer ACTION: initialize"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="71" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="Writer STATE: WriteFile"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="72" procedure="#//@procs.3">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="-------------------------"/>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
        </thenBlocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="64" name="isSchedulable_untagged_0">
      <locals assignable="true" defs="#//@initializes.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="result" uses="#//@initializes.0/@scheduler/@blocks.0/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@initializes.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@initializes.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag/>
  </initializes>
  <inputs label="Byte">
    <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
  </inputs>
  <inputs label="pEOF">
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </inputs>
  <procs lineNumber="52" name="Writer_init" native="true">
    <attributes name="native"/>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="57" name="Writer_write" native="true">
    <attributes name="native"/>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <parameters>
      <variable assignable="true" lineNumber="57" name="byte">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="8"/>
      </variable>
    </parameters>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="62" name="Writer_close" native="true">
    <attributes name="native"/>
    <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
      <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
    </blocks>
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs name="print" native="true">
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <stateVars assignable="true" lineNumber="47" name="DEBUG" uses="#//@actions.0/@body/@blocks.0/@instructions.2/@source #//@actions.1/@body/@blocks.0/@instructions.2/@source #//@initializes.0/@body/@blocks.0/@instructions.1/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprBool" value="true"/>
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.1/@target"
      lineNumber="76" name="peof" uses="#//@actions.0/@body/@blocks.1/@thenBlocks.0/@instructions.1/@source #//@actions.0/@body/@blocks.2/@instructions.0/@source #//@actions.1/@scheduler/@blocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprBool"/>
    <type xsi:type="net.sf.orcc.ir:TypeBool"/>
  </stateVars>
</net.sf.orcc.df:Actor>
